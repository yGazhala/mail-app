.userCard_backwardButton {
  @include secondaryMenuButton;
  left: (map-get($layout, 'side-bar-width') + map-get($layout, 'main-content-padding-left')) *1px;
}

.userCard_openUserEditFormButton {
  @include secondaryMenuButton;
  left: (map-get($layout, 'side-bar-width') + map-get($layout, 'main-content-padding-left') + 70) *1px;
  background-image: url('../../../images/edit-user-17x18.png');
  background-repeat: no-repeat;
  background-position: +10px -44px;
  &:hover {
    background-position: +10px -7px;
  }
}

.userCard_container {
  max-width: map-get($layout, 'message-width') * 1px;
}

.userCard_fullName {
  padding: map-get($type-scale, '-1') * 1rem 0;
  padding-left: map-get($type-scale, '-2') * 1rem;
  font-size: map-get($type-scale, '0') * 1rem;
  color: map-get($colors, 'base-text');
  background-color: map-get($colors, 'primary-light');
  border: 1px solid map-get($colors, 'border');
  border-top: none;
}

.userCard_container table {
  width: 100%;

  td {
   padding: map-get($type-scale, '-1') * 1rem 0;
   border-bottom: 1px solid map-get($colors, 'border');
  }

  tr {
    border-left: 1px solid map-get($colors, 'border');
    border-right: 1px solid map-get($colors, 'border');
  }

  tr:nth-child(2n) {
    background-color: map-get($colors, 'primary-light');
  }
}
.userCard_label {
  width: 8rem;
  font-style: oblique;
  span {
    margin-left: map-get($type-scale, '-2') * 1rem;
  }
}

@media screen and (max-width: map-get($points, '-1')) {
  .userCard_backwardButton {
    @include mobileBackwardButton;
  }

  .userCard_openUserEditFormButton {
    @include mobileTopNavBarButton;
    width: 33px;
    right: 0;
    left: auto;
    padding: 0;
    background-position: 0 -68px;
    transition: none;
    transition: background-color 200ms;
    &:hover {
      background-position: 0 -68px;
    }
    &:active {
      background-position: 0 -106px;
    }
  }

  .userCard_fullName {
    background-color: transparent;
  }

  .userCard_container table {
    tr:nth-child(2n) {
      background-color: transparent;
    }

    tr:nth-child(2n+1) {
      background-color: map-get($colors, 'primary-light');
    }
  }
}
